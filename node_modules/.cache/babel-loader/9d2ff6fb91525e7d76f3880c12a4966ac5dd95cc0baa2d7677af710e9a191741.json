{"ast":null,"code":"var _jsxFileName = \"D:\\\\hellow\\\\client\\\\src\\\\components\\\\index.js\",\n  _s = $RefreshSig$();\n// Import necessary dependencies from React and Axios\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n// Define a functional component called Index\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  _s();\n  // Define state variables using the useState hook\n  const [startRange, setStartRange] = useState(null); // State for start range input\n  const [endRange, setEndRange] = useState(null); // State for end range input\n  const [algorithmType, setAlgorithmType] = useState(''); // State for algorithm type input\n  const [primeCount, setPrimeCount] = useState(0); // State for the count of prime numbers found\n  const [primeRecords, setPrimeRecords] = useState([]); // State for storing prime numbers found\n  const [loading, setLoading] = useState(false); // State to manage loading state\n\n  // Initialize navigate from useNavigate hook to handle navigation\n  const navigate = useNavigate();\n\n  // useEffect hook to set initial values for start and end range when the component mounts\n  useEffect(() => {\n    setStartRange(0);\n    setEndRange(0);\n  }, []);\n\n  // Function to fetch prime numbers from the backend\n  const fetchPrimeNumbers = async () => {\n    // Check if all input fields are filled\n    if (!startRange || !endRange || !algorithmType) {\n      console.error('Please fill in all fields');\n      return;\n    }\n    try {\n      setLoading(true); // Set loading to true while fetching data\n      // Send a POST request to the backend API to fetch prime numbers\n      const response = await axios.post('http://localhost:3001/api/data', {\n        start: parseInt(startRange),\n        end: parseInt(endRange),\n        algorithm: algorithmType\n      });\n      setLoading(false); // Set loading to false after fetching data\n      // Update state with the count of prime numbers and the prime numbers themselves\n      setPrimeCount(response.data.numPrimes);\n      setPrimeRecords(response.data.primes);\n    } catch (error) {\n      console.error('Error fetching prime numbers:', error);\n      setLoading(false); // Set loading to false in case of error\n    }\n  };\n\n  // Function to handle navigation to prime number records page\n  const handleRedirect = () => {\n    navigate('/database');\n  };\n\n  // JSX for rendering UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container bg-purple-50 mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-black shadow-xs font-bold py-5  text-2xl text-center\",\n          children: \"Prime Number Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 mr-4 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"font-semibold mr-5\",\n            children: \"Enter the starting range:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"start\",\n            value: startRange,\n            onChange: e => setStartRange(e.target.value),\n            className: \"border border-gray-300 rounded-md p-2 ml-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 mr-4 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"font-semibold mr-7\",\n            children: \"Enter the ending range:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"end\",\n            value: endRange,\n            onChange: e => setEndRange(e.target.value),\n            className: \"border border-gray-300 rounded-md p-2 ml-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 mr-4 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"font-semibold mr-5\",\n            children: \"Enter the algorithm type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"algorithm\",\n            value: algorithmType,\n            onChange: e => setAlgorithmType(e.target.value),\n            className: \"border border-gray-300 rounded-md p-2 ml-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mt-5 items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: fetchPrimeNumbers,\n            className: \"bg-purple-700 hover:bg-purple-900 text-white font-bold py-2 px-4 rounded\",\n            children: loading ? 'Loading...' : 'Generate'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border text-center font-normal text-white pl-1 pb-2 justify-center bg-purple-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-white pt-5\",\n          children: [\"Prime numbers between \", startRange, \" and \", endRange, \" are\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center text-center mx-10\",\n          children: primeRecords.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              display: 'flex',\n              listStyleType: 'none',\n              padding: 0,\n              flexWrap: 'wrap'\n            },\n            className: \"mb-2\",\n            children: primeRecords.map((prime, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                marginRight: '10px'\n              },\n              className: \"text-xl font-semibold text-white\",\n              children: [index !== 0 && ',', \" \", prime]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \" text-xl font-semibold text-white\",\n          children: [\"Algorithm used: \", algorithmType, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-2 text-xl font-semibold text-white\",\n          children: [\"Count of prime numbers: \", primeCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center my-5\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \" bg-purple-700 hover:bg-purple-900 text-white font-bold py-2 px-4 rounded\",\n          onClick: handleRedirect,\n          children: \"Prime Number Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n// Export the Index component as the default export\n_s(Index, \"B3gGPzdKnDYlSw33VvZDPcQzZms=\", false, function () {\n  return [useNavigate];\n});\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Index","_s","startRange","setStartRange","endRange","setEndRange","algorithmType","setAlgorithmType","primeCount","setPrimeCount","primeRecords","setPrimeRecords","loading","setLoading","navigate","fetchPrimeNumbers","console","error","response","post","start","parseInt","end","algorithm","data","numPrimes","primes","handleRedirect","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","onChange","e","target","onClick","length","style","display","listStyleType","padding","flexWrap","map","prime","index","marginRight","_c","$RefreshReg$"],"sources":["D:/hellow/client/src/components/index.js"],"sourcesContent":["// Import necessary dependencies from React and Axios\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Define a functional component called Index\r\nconst Index = () => {\r\n  // Define state variables using the useState hook\r\n  const [startRange, setStartRange] = useState(null); // State for start range input\r\n  const [endRange, setEndRange] = useState(null); // State for end range input\r\n  const [algorithmType, setAlgorithmType] = useState(''); // State for algorithm type input\r\n  const [primeCount, setPrimeCount] = useState(0); // State for the count of prime numbers found\r\n  const [primeRecords, setPrimeRecords] = useState([]); // State for storing prime numbers found\r\n  const [loading, setLoading] = useState(false); // State to manage loading state\r\n\r\n  // Initialize navigate from useNavigate hook to handle navigation\r\n  const navigate = useNavigate();\r\n\r\n  // useEffect hook to set initial values for start and end range when the component mounts\r\n  useEffect(() => {\r\n    setStartRange(0);\r\n    setEndRange(0);\r\n  }, []);\r\n\r\n  // Function to fetch prime numbers from the backend\r\n  const fetchPrimeNumbers = async () => {\r\n    // Check if all input fields are filled\r\n    if (!startRange || !endRange || !algorithmType) {\r\n      console.error('Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true); // Set loading to true while fetching data\r\n      // Send a POST request to the backend API to fetch prime numbers\r\n      const response = await axios.post('http://localhost:3001/api/data', {\r\n        start: parseInt(startRange),\r\n        end: parseInt(endRange),\r\n        algorithm: algorithmType,\r\n      });\r\n      setLoading(false); // Set loading to false after fetching data\r\n      // Update state with the count of prime numbers and the prime numbers themselves\r\n      setPrimeCount(response.data.numPrimes);\r\n      setPrimeRecords(response.data.primes);\r\n    } catch (error) {\r\n      console.error('Error fetching prime numbers:', error);\r\n      setLoading(false); // Set loading to false in case of error\r\n    }\r\n  };\r\n\r\n  // Function to handle navigation to prime number records page\r\n  const handleRedirect = () => {\r\n    navigate('/database');\r\n  };\r\n\r\n  // JSX for rendering UI\r\n  return (\r\n    <div>\r\n      <div className=\"container bg-purple-50 mx-auto\">\r\n        <form className=\"mb-8\">\r\n          <div className='text-black shadow-xs font-bold py-5  text-2xl text-center'>Prime Number Generator</div>\r\n          {/* Input fields for start and end range, and algorithm type */}\r\n          <div className=\"mb-4 mr-4 text-center\">\r\n            <label className='font-semibold mr-5'>Enter the starting range:</label>\r\n            <input type=\"number\" name=\"start\" value={startRange} onChange={(e) => setStartRange(e.target.value)} className=\"border border-gray-300 rounded-md p-2 ml-2\" />\r\n          </div>\r\n          <div className=\"mb-4 mr-4 text-center\">\r\n            <label className='font-semibold mr-7'>Enter the ending range:</label>\r\n            <input type=\"number\" name=\"end\" value={endRange} onChange={(e) => setEndRange(e.target.value)} className=\"border border-gray-300 rounded-md p-2 ml-2\" />\r\n          </div>\r\n          <div className=\"mb-4 mr-4 text-center\">\r\n            <label className='font-semibold mr-5'>Enter the algorithm type:</label>\r\n            <input type=\"text\" name=\"algorithm\" value={algorithmType} onChange={(e) => setAlgorithmType(e.target.value)} className=\"border border-gray-300 rounded-md p-2 ml-2\" />\r\n          </div>\r\n          {/* Button to trigger prime number generation */}\r\n          <div className=\"flex justify-center mt-5 items-center\">\r\n            <button type=\"button\" onClick={fetchPrimeNumbers} className=\"bg-purple-700 hover:bg-purple-900 text-white font-bold py-2 px-4 rounded\">\r\n              {loading ? 'Loading...' : 'Generate'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n        {/* Display prime numbers, algorithm type, and count */}\r\n        <div className='border text-center font-normal text-white pl-1 pb-2 justify-center bg-purple-500'>\r\n          <h2 className=\"text-xl font-semibold text-white pt-5\">Prime numbers between {startRange} and {endRange} are</h2>\r\n          <div className='flex justify-center items-center text-center mx-10'>\r\n            {/* Display prime numbers in a list */}\r\n            {primeRecords.length > 0 && (\r\n              <ul style={{ display: 'flex', listStyleType: 'none', padding: 0, flexWrap: 'wrap' }} className=\"mb-2\">\r\n                {primeRecords.map((prime, index) => (\r\n                  <li key={index} style={{ marginRight: '10px' }} className=\"text-xl font-semibold text-white\">\r\n                    {index !== 0 && ','} {prime}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n          {/* Display algorithm type and count of prime numbers */}\r\n          <p className=\" text-xl font-semibold text-white\">Algorithm used: {algorithmType} </p>\r\n          <p className=\"mb-2 text-xl font-semibold text-white\">Count of prime numbers: {primeCount}</p>\r\n        </div>\r\n        <div className='flex justify-center items-center my-5'>\r\n          {/* Button to navigate to prime number records page */}\r\n          <button type=\"button\" className=' bg-purple-700 hover:bg-purple-900 text-white font-bold py-2 px-4 rounded' onClick={handleRedirect}>\r\n            Prime Number Records\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export the Index component as the default export\r\nexport default Index;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}