{"ast":null,"code":"var _jsxFileName = \"D:\\\\hellow\\\\client\\\\src\\\\components\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  _s();\n  const [startRange, setStartRange] = useState('');\n  const [endRange, setEndRange] = useState('');\n  const [primeNumbers, setPrimeNumbers] = useState([]);\n  const [algorithmType, setAlgorithmType] = useState('');\n  const [primeCount, setPrimeCount] = useState(0);\n  const handleGenerate = async () => {\n    const start = parseInt(startRange);\n    const end = parseInt(endRange);\n    if (isNaN(start) || isNaN(end) || start >= end) {\n      alert('Please enter valid start and end range!');\n      return;\n    }\n    const primes = [];\n    let count = 0;\n    for (let i = start; i <= end; i++) {\n      if (isPrime(i)) {\n        primes.push(i);\n        count++;\n      }\n    }\n    setPrimeNumbers(primes);\n    setPrimeCount(count);\n  };\n  const isPrime = num => {\n    if (num <= 1) return false;\n    if (num <= 3) return true;\n    if (num % 2 === 0 || num % 3 === 0) return false;\n    let i = 5;\n    while (i * i <= num) {\n      if (num % i === 0 || num % (i + 2) === 0) return false;\n      i += 6;\n    }\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter the starting range:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"start\",\n          value: startRange,\n          onChange: e => setStartRange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter the ending range:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"end\",\n          value: endRange,\n          onChange: e => setEndRange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter the algorithm type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"algorithm\",\n          value: algorithmType,\n          onChange: e => setAlgorithmType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleGenerate(),\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Prime numbers between \", startRange, \" and \", endRange, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Algorithm used: \", algorithmType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Count of prime numbers: \", primeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: primeNumbers.map((num, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Index, \"8yKAWPbY7pWjN/NXKg2BqieJplM=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Index","_s","startRange","setStartRange","endRange","setEndRange","primeNumbers","setPrimeNumbers","algorithmType","setAlgorithmType","primeCount","setPrimeCount","handleGenerate","start","parseInt","end","isNaN","alert","primes","count","i","isPrime","push","num","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","onChange","e","target","onClick","map","index","_c","$RefreshReg$"],"sources":["D:/hellow/client/src/components/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Index = () => {\r\n  const [startRange, setStartRange] = useState('');\r\n  const [endRange, setEndRange] = useState('');\r\n  const [primeNumbers, setPrimeNumbers] = useState([]);\r\n  const [algorithmType, setAlgorithmType] = useState('');\r\n  const [primeCount, setPrimeCount] = useState(0);\r\n \r\n  \r\n  \r\n  \r\n\r\n  const handleGenerate = async () => {\r\n    const start = parseInt(startRange);\r\n    const end = parseInt(endRange);\r\n\r\n    if (isNaN(start) || isNaN(end) || start >= end) {\r\n      alert('Please enter valid start and end range!');\r\n      return;\r\n    }\r\n\r\n    const primes = [];\r\n    let count = 0;\r\n\r\n    for (let i = start; i <= end; i++) {\r\n      if (isPrime(i)) {\r\n        primes.push(i);\r\n        count++;\r\n      }\r\n    }\r\n\r\n    setPrimeNumbers(primes);\r\n    setPrimeCount(count);\r\n  };\r\n\r\n  const isPrime = (num) => {\r\n    if (num <= 1) return false;\r\n    if (num <= 3) return true;\r\n\r\n    if (num % 2 === 0 || num % 3 === 0) return false;\r\n\r\n    let i = 5;\r\n    while (i * i <= num) {\r\n      if (num % i === 0 || num % (i + 2) === 0) return false;\r\n      i += 6;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <div>\r\n          <label>Enter the starting range:</label>\r\n          <input type=\"number\" name=\"start\" value={startRange} onChange={(e) => setStartRange(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Enter the ending range:</label>\r\n          <input type=\"number\" name=\"end\" value={endRange} onChange={(e) => setEndRange(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Enter the algorithm type:</label>\r\n          <input type=\"text\" name=\"algorithm\" value={algorithmType} onChange={(e) => setAlgorithmType(e.target.value)} />\r\n        </div>\r\n        <button type=\"button\" onClick={() => handleGenerate()}>\r\n          Generate\r\n        </button>\r\n      </form>\r\n      <div>\r\n        <h2>Prime numbers between {startRange} and {endRange}:</h2>\r\n        <p>Algorithm used: {algorithmType}</p>\r\n        <p>Count of prime numbers: {primeCount}</p>\r\n        <ul>\r\n          {primeNumbers.map((num, index) => (\r\n            <li key={index}>{num}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        {/* <h2>Prime Records:</h2>\r\n        <ul>\r\n          {primeRecords.map((record) => (\r\n            <li key={record._id}>{record.start} - {record.end}</li>\r\n          ))}\r\n        </ul> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}